name: Rebuild NixOS

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  rebuild:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'

      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
            trusted-users = root runner

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:ci
          version: 1.60.0  # Specify a version explicitly
        id: tailscale

      - name: Wait for Tailscale
        run: |
          echo "Waiting for Tailscale to be ready..."
          sleep 10  # Give Tailscale some time to establish connection
          tailscale status
          echo "Testing connectivity..."
          ping -c 4 ${{ vars.ETHERNIX }}

      - name: Configure SSH
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "Host ethernix.tamarin-sunfish.ts.net" > ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_ed25519" >> ~/.ssh/config
          echo "  User aloshy" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config
          echo "  UserKnownHostsFile=/dev/null" >> ~/.ssh/config

      - name: Build and Deploy
        env:
          ETHERNIX: ${{ vars.ETHERNIX }}
        run: |
          # Build locally to catch any errors
          nix build .#nixosConfigurations.ethernix.config.system.build.toplevel \
            --impure \
            --option sandbox false \
            --option extra-platforms aarch64-linux \
            --option system-features kvm

          echo "Testing SSH connection before deploy..."
          ssh -v -i ~/.ssh/id_ed25519 aloshy@$ETHERNIX "echo 'SSH connection successful'"

          # Then deploy if build succeeds
          nix run nixpkgs#nixos-rebuild -- switch \
            --flake .#ethernix \
            --target-host "aloshy@$ETHERNIX" \
            --use-remote-sudo \
            --impure \
            --show-trace