name: Build and Deploy NixOS

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      image-path: ${{ steps.find-image.outputs.image-path }}

    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'

      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
            trusted-users = root runner

      - name: Install zstd
        run: sudo apt-get update && sudo apt-get install -y zstd

      - name: Build NixOS
        run: |
          nix build .#nixosConfigurations.ethernix.config.system.build.toplevel \
            --impure \
            --option sandbox false \
            --option extra-platforms aarch64-linux \
            --option system-features kvm

      - name: Find and extract image
        id: find-image
        run: |
          mkdir -p out
          IMAGE_PATH=$(find /nix/store -name 'nixos-image-sd-card-*.img.zst' -print -quit)
          echo "image-path=${IMAGE_PATH}" >> "$GITHUB_OUTPUT"
          unzstd -d "${IMAGE_PATH}" -o out/ethernix.img

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: nixos-image
          path: out/ethernix.img
          retention-days: 5

  deploy:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:ci

      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to NixOS
        env:
          ETHERNIX: ${{ vars.ETHERNIX }}
        run: |
          nix run nixpkgs#nixos-rebuild -- switch \
            --flake .#ethernix \
            --target-host "aloshy@$ETHERNIX" \
            --use-remote-sudo \
            --impure \
            --show-trace