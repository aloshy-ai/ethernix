name: Build & Deploy NixOS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Maximize build space
        uses: AdityaGarg8/remove-unwanted-software@v4
        with:
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
          remove-large-packages: 'true'
          remove-cached-tools: 'true'

      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
            trusted-users = root runner

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: ethernix
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build
        run: |
          nix build .#nixosConfigurations.ethernix.config.system.build.toplevel \
            --impure \
            --option sandbox false \
            --option extra-platforms aarch64-linux \
            --option system-features kvm

      - name: Push to Cachix
        run: |
          cachix push ethernix ./result

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            extra-platforms = aarch64-linux
            trusted-users = root runner

      - name: Connect to Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags: tag:ci

      - name: Deploy
        env:
          ETHERNIX: ${{ vars.ETHERNIX }}
        run: |
          nix run nixpkgs#nixos-rebuild -- switch \
            --flake .#ethernix \
            --target-host "aloshy@$ETHERNIX" \
            --use-remote-sudo \
            --impure \
            --option extra-platforms aarch64-linux \
            --option system-features kvm \
            --show-trace